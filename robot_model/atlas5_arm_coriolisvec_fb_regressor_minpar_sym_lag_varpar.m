% Calculate joint torque vector of coriolis and centripetal forces for
% Atlas Robot (v5)
% from Maple symbolic code generation in MDH frames
% 
% Input:
% q [1x7]
%   Joint Angles [rad]
% qD [1x7]
%   Joint Velocities [rad/s]
% a_mdh, d_mdh, q_offset_mdh [6x1] double
%   kinematic parameters [m], [rad]
% lr [1x1 logical]
%   true for left, false for right
% 
% Output:
% cq [1x7]
%   joint torque vector of coriolis and centripetal forces [Nm]
% 

% Moritz Schappler, schappler@irt.uni-hannover.de, 2015-03
% (c) Institut für Regelungstechnik, Leibniz Universität Hannover

function tauc_regressor = atlas5_arm_coriolisvec_fb_regressor_minpar_sym_lag_varpar(q, qD, a_mdh, d_mdh, q_offset_mdh, lr)
%% Init
% Coder Information
%#codegen
assert(isa(q,'double') && isreal(q) && all(size(q) == [1 7]), ...
  'Joint angles q have to be [1x7] double');
assert(isa(qD,'double') && isreal(qD) && all(size(qD) == [1 7]), ...
  'Joint Velocities qD have to be [1x7] double');
assert(isa(a_mdh,'double') && isreal(a_mdh) && all(size(a_mdh) == [7 1]), ...
  'a_mdh has to be [7x1] double'); 
assert(isa(d_mdh,'double') && isreal(d_mdh) && all(size(d_mdh) == [7 1]), ...
  'd_mdh has to be [7x1] double'); 
assert(isa(q_offset_mdh,'double') && isreal(q_offset_mdh) && all(size(q_offset_mdh) == [7 1]), ...
  'q_offset_mdh has to be [7x1] double'); 
assert(isa(lr,'logical') && all(size(lr) == [1 1]));      

qs2 = q(2);
qs3 = q(3);
qs4 = q(4);
qs5 = q(5);
qs6 = q(6);
qs7 = q(7);

qsD1 = qD(1);
qsD2 = qD(2);
qsD3 = qD(3);
qsD4 = qD(4);
qsD5 = qD(5);
qsD6 = qD(6);
qsD7 = qD(7);
%% Get MDH Parameters

d3 = d_mdh(3);
d5 = d_mdh(5);

a2 = a_mdh(2);
a3 = a_mdh(3);
a4 = a_mdh(4);
a5 = a_mdh(5);
a6 = a_mdh(6);

qoffset2 = q_offset_mdh(2);

%% Maple Generated Calculation 
% from codeexport/atlas5_arm_coriolisvec_fb_regressor_minpar_mapleexport.m

t3024 = qs2 + qoffset2;
t3016 = cos(t3024);
t3041 = sin(qs3);
t3571 = t3016 * t3041;
t3321 = qsD2 * t3571;
t2964 = qsD1 * t3321;
t3047 = cos(qs3);
t3042 = sin(qs2);
t3048 = cos(qs2);
t3055 = qsD1 ^ 2;
t3501 = t3048 * t3055;
t3309 = t3042 * t3501;
t2980 = t3047 * t3309;
t3078 = t2980 + t2964;
t3015 = sin(t3024);
t3206 = a3 * t3016 + d3 * t3015;
t2923 = a2 + t3206;
t3593 = t2923 * t3047;
t3094 = qsD1 * t3593;
t3631 = t3041 * qsD2;
t3370 = d3 * t3631;
t2826 = -t3094 + t3370;
t3054 = qsD2 ^ 2;
t3502 = t3047 * t3054;
t3013 = a3 * t3502;
t3711 = a2 * t3042;
t3014 = t3055 * t3711;
t3575 = t3015 * t3041;
t2979 = qsD1 * t3575;
t3231 = qsD2 * t2979;
t3030 = t3042 ^ 2;
t3567 = t3030 * t3055;
t3110 = qsD3 * t2826 - t3047 * t3014 - t3013 + (-t3047 * t3567 - t3231) * a3;
t2578 = -d3 * t3078 - t3110;
t3531 = t3041 * t3047;
t3312 = t3015 * t3531;
t2946 = qsD1 * t3312;
t2936 = qsD2 * t2946;
t3029 = t3041 ^ 2;
t3035 = t3047 ^ 2;
t3001 = t3035 - t3029;
t3036 = t3048 ^ 2;
t3565 = t3036 * t3055;
t2768 = 0.4e1 * t2936 - t3001 * (-t3054 + t3565);
t3040 = sin(qs4);
t3046 = cos(qs4);
t3203 = a5 * t3046 + d5 * t3040;
t2973 = a4 + t3203;
t3051 = qsD5 ^ 2;
t3573 = t3015 * t3047;
t2927 = qsD1 * t3573 - t3631;
t2764 = qsD3 * t2927 - t3078;
t3019 = t3047 * qsD2;
t2925 = t2979 + t3019;
t3676 = qsD4 * t2925;
t3254 = t2768 + t3676;
t2550 = -t3040 * t2764 + t3046 * t3254;
t3052 = qsD4 ^ 2;
t3342 = qsD3 * t3573;
t2969 = qsD1 * t3342;
t3357 = qsD3 * t3631;
t2832 = t2964 + t2969 - t3357;
t3542 = t3040 * t2832;
t2666 = -t3542 + (-t3052 - t3676) * t3046;
t3918 = t2666 - t2550;
t3945 = a4 * t2768 - t3918 * a5 - t2973 * t3051 + t2578;
t3039 = sin(qs5);
t3944 = 0.2e1 * t3039;
t3940 = qsD4 + t2925;
t2863 = t3940 * t3046;
t3552 = t3039 * t2863;
t2805 = t3046 * t2826;
t3708 = a4 * t3040;
t3352 = d5 + t3708;
t2619 = t2927 * t3352 - t2805;
t3112 = t2923 * t3041;
t3095 = qsD1 * t3112;
t2827 = d3 * t3019 + t3095;
t3202 = a5 * t3040 - d5 * t3046;
t2623 = t2925 * t3202 - t2827;
t2959 = t3202 * qsD4;
t3045 = cos(qs5);
t3942 = t2619 * t3039 + (-t2623 - t2959) * t3045;
t3534 = t3040 * t3047;
t3574 = t3015 * t3046;
t3119 = t3016 * t3534 + t3574;
t2866 = t3119 * qsD1;
t3503 = t3046 * t3047;
t3576 = t3015 * t3040;
t2867 = (-t3016 * t3503 + t3576) * qsD1;
t3205 = a3 * t3015 - d3 * t3016;
t2915 = t3205 * qsD1;
t3180 = -d3 + t3202;
t3672 = qsD4 * t3041;
t3680 = qsD3 * t3047;
t3687 = qsD1 * t3015;
t3939 = -a4 * t3687 - a5 * t2866 - d5 * t2867 - t2915 * t3047 - t3180 * t3680 - t3203 * t3672;
t3002 = t3016 * qsD1;
t3008 = -a4 * t3047 - a3;
t3505 = t3046 * t3008;
t3099 = qsD4 * (-d3 * t3534 - t3505);
t3700 = d3 * t3046;
t3350 = d5 + t3700;
t3596 = t2915 * t3046;
t3681 = qsD3 * t3041;
t3938 = (t3002 * t3352 - t3596) * t3041 - t3099 - (-t3350 - t3708) * t3681;
t3509 = t3046 * t2764;
t2549 = -t3040 * t3254 - t3509;
t2911 = t3040 * t2927;
t3781 = t3002 + qsD3;
t2944 = t3046 * t3781;
t3147 = 0.2e1 * t2944 - t2911;
t2626 = a4 * t3147 - t2805;
t3028 = t3040 ^ 2;
t3034 = t3046 ^ 2;
t3000 = -t3034 + t3028;
t3891 = 0.2e1 * t3040;
t3858 = t2944 * t3891;
t2760 = -t2927 * t3000 + t3858;
t3278 = -d5 * t2760 - t2626;
t3937 = d5 * t2549 - qsD5 * t3278 - t3945;
t3936 = 0.2e1 * t3940;
t3270 = qsD3 * t3046 + qsD5;
t3648 = qsD5 * t3046;
t3271 = -qsD3 - t3648;
t3347 = qsD1 * t3571;
t3513 = t3045 * t3047;
t3536 = t3040 * t3045;
t3935 = t3270 * t3513 + (-qsD4 * t3536 + t3039 * t3271) * t3041 - t2867 * t3045 - t3039 * t3347;
t2804 = t3040 * t2826;
t3009 = qsD3 * t3019;
t3782 = t3205 * qsD2;
t3109 = qsD1 * t3782;
t3181 = -d3 * t3009 - t3047 * t3109;
t2677 = -qsD3 * t3095 + t3181;
t3686 = qsD2 * t3015;
t3356 = qsD1 * t3686;
t2965 = t3046 * t3356;
t3208 = -0.2e1 * t2965;
t3720 = -0.2e1 * qsD4;
t3301 = t3708 * t3720;
t3570 = t3016 * t3047;
t3320 = qsD2 * t3570;
t3232 = qsD1 * t3320;
t2968 = qsD3 * t2979;
t3399 = t2968 + t3009;
t2831 = -t3232 + t3399;
t3590 = t2927 * t3046;
t3809 = -qsD4 * t3590 + t2831 * t3040;
t3173 = t3046 * t2677 + t3781 * t3301 + (t3208 + t3809) * a4;
t2446 = qsD4 * t2804 + t3173;
t2812 = t3046 * t2831;
t3673 = qsD4 * t3034;
t3807 = -qsD4 * t3028 + t3673;
t3748 = qsD4 * t3858 - t3040 * t2812 + t2927 * t3807;
t2554 = -t3034 * t3356 - t3748;
t3535 = t3040 * t3046;
t2888 = t2927 * t3535;
t2943 = t3034 * t3781;
t3386 = t3781 * t3720;
t3719 = 0.2e1 * qsD4;
t2556 = -0.4e1 * qsD4 * t2888 + t3000 * t2831 + t2943 * t3719 + t3028 * t3386 + t3040 * t3208;
t3410 = -qsD3 * t3094 + t3041 * t3109;
t2676 = d3 * t3357 + t3410;
t2791 = -t2888 + t2943;
t3651 = qsD5 * t3039;
t3375 = a5 * t3651;
t3300 = -0.2e1 * t3375;
t3649 = qsD5 * t3045;
t3373 = d5 * t3649;
t3702 = a5 * t3045;
t3394 = 0.2e1 * t3702;
t3022 = t3052 * t3040;
t3592 = t2925 * t3040;
t3599 = t2832 * t3046;
t2665 = qsD4 * t3592 + t3022 - t3599;
t3554 = t3039 * t2665;
t3693 = d5 * t3045;
t3934 = d5 * t3554 + qsD5 * t3942 + t3045 * t2446 + t2554 * t3394 + t2556 * t3693 + t3039 * t2676 + t2791 * t3300 - t2827 * t3649 - t2863 * t3373;
t3303 = t3565 / 0.2e1;
t2843 = t3029 * t3303 + t2936 + t3035 * t3054 / 0.2e1;
t3709 = a3 * t3042;
t3105 = d3 * t3036 + (-a2 - t3709) * t3048;
t2876 = d3 * t3054 + t3055 * t3105;
t3090 = t3567 / 0.2e1 + qsD3 * (t3002 + qsD3 / 0.2e1);
t3789 = 0.2e1 * t3046;
t3072 = t3090 * t3789;
t3707 = a4 * t3046;
t3108 = a4 * t3072 + t3046 * t2578 - t2764 * t3708 + 0.2e1 * t2843 * t3707 - t3040 * t2876;
t2898 = -qsD2 * a3 - a4 * t2925;
t2663 = t2827 * t3040 + t2898 * t3046;
t3679 = qsD4 * t2663;
t2372 = t3108 - t3679;
t3213 = t3041 * t3309;
t3345 = qsD2 * t3573;
t3230 = qsD1 * t3345;
t3797 = -a3 * t3230 - d3 * t3213 + qsD3 * t2827 + (a3 * (t3054 + t3567) + t3014) * t3041;
t2577 = -d3 * t3232 - t3797;
t3004 = t3041 * t3502;
t3311 = t3036 * t3531;
t3132 = -t3055 * t3311 + t3004;
t3578 = t3001 * t3015;
t3346 = qsD2 * t3578;
t2797 = -qsD1 * t3346 + t3132;
t2510 = -a4 * t2797 + t2577;
t2962 = t3040 * t3356;
t3413 = t2812 + t2962;
t3405 = t2944 - t2911;
t3890 = qsD4 * t3405;
t2600 = t3413 - t3890;
t3540 = t3040 * t3781;
t3406 = qsD4 * t3540 + t2965;
t2601 = -t3406 + t3809;
t3096 = qsD3 * t3112;
t3821 = -a4 * t3686 - t3096;
t3056 = t2601 * a5 - t2600 * d5 + qsD1 * t3821 + t3181;
t3414 = a4 * t3542 - t3046 * t2676;
t3077 = t3414 - t3679;
t3690 = t2832 * d5;
t3069 = t3077 + t3690;
t3104 = qsD3 * t2925 - t3213;
t2762 = t3104 + t3232;
t3510 = t3046 * t2762;
t3152 = t3040 * t2797 + t3510;
t2522 = -t3152 - t3890;
t3568 = t3029 * t3054;
t3084 = t3035 * t3303 - t2936 + t3568 / 0.2e1;
t3361 = -0.2e1 * t3535;
t3850 = t2764 * t3000;
t2545 = t3040 * t3072 + t3084 * t3361 - t3850;
t3518 = t3045 * t2545;
t3811 = -t2522 * t3039 - t3518;
t3933 = -d5 * t3811 + (t2372 - t3069) * t3045 + (t2510 - t3056) * t3039;
t2862 = t3940 * t3040;
t2684 = a4 * t3590 + t2804;
t3577 = t3015 * t3029;
t3348 = qsD1 * t3577;
t2754 = -qsD2 * t3348 + t3035 * t3356 - t3132;
t3368 = t2754 * t3789;
t3606 = t2762 * t3040;
t3734 = -(t3368 + t3606) * a4 - t3046 * t2577;
t2411 = qsD4 * t2684 - t3734;
t3675 = qsD4 * t2927;
t2667 = t2754 + t3675;
t2724 = t3040 * t3510;
t3417 = t3028 * t2754 - t2724;
t3794 = 0.2e1 * a5;
t3775 = (-t3417 + t2667) * t3794;
t3120 = t2411 + t3775;
t3374 = a5 * t3649;
t3050 = qsD6 ^ 2;
t3547 = t3039 * t3050;
t2571 = t2762 * t3000 + t3040 * t3368;
t3695 = d5 * t2571;
t3932 = -t2862 * t3374 + (t3120 + t3695) * t3045 + t2973 * t3547 - t3934 + t3937 * t3039;
t3504 = t3046 * t3016;
t2896 = t3015 * t3534 - t3504;
t3530 = t3042 * t3048;
t3682 = qsD3 * t3015;
t3721 = 0.2e1 * qsD1;
t3128 = t3530 * t3721 - t3682;
t2821 = -t3041 * t3128 + t3320;
t3722 = -0.2e1 * qsD1;
t2852 = t3311 * t3722 - t3346;
t3151 = -t2821 * t3046 - t2852 * t3040;
t2583 = qsD4 * t2896 + t3151;
t3150 = t2821 * t3040 - t2852 * t3046;
t3572 = t3016 * t3040;
t3118 = t3015 * t3503 + t3572;
t3855 = qsD4 * t3118;
t2584 = -t3150 - t3855;
t3532 = t3041 * t3046;
t3338 = qsD3 * t3532;
t3671 = qsD4 * t3047;
t2654 = (-qsD4 - t3019) * t3504 + (t3338 + (qsD2 + t3671) * t3040) * t3015;
t3538 = t3040 * t3041;
t3340 = qsD3 * t3538;
t2655 = qsD2 * t3119 - t3015 * t3340 + t3855;
t3698 = d3 * t3048;
t3710 = a3 * t3030;
t3080 = 0.2e1 * (-a2 + t3698) * t3042 - 0.2e1 * t3710;
t3733 = qsD1 * t3080 - qsD3 * t2923;
t3931 = -a4 * t2852 + t3041 * t3733 + t3821 + (t2583 - t2654) * d5 + (-t2584 - t2655) * a5;
t2937 = t3047 * t2964;
t3343 = t3035 * t3682;
t2966 = qsD1 * t3343;
t3377 = 0.2e1 * t3019;
t3259 = t3041 * t3377;
t3071 = (t3259 + t3348) * qsD3 - t2966;
t2720 = -t2937 + t3071;
t3053 = qsD3 ^ 2;
t3023 = t3053 * t3047;
t2842 = t3023 + (-qsD2 * t3575 + qsD3 * t3570) * qsD1;
t2926 = t3781 * t3041;
t2887 = t2926 * t3535;
t2913 = qsD2 * t3029 - t2946;
t2890 = t3028 * t2913;
t3598 = t2913 * t3034;
t3792 = 0.4e1 * qsD4;
t2460 = t2720 * t3361 + t3000 * t2842 + t2887 * t3792 + t2890 * t3719 + t3598 * t3720;
t3358 = qsD3 * t3002;
t3398 = t3030 - t3036;
t3776 = t3398 * t3055;
t3805 = t3776 + t3358;
t2771 = -t3047 * t3805 - t3231;
t3214 = t3035 * t3309;
t2860 = -t2937 - t3214;
t2920 = -qsD1 * t3682 + t3309;
t3262 = t3040 * t3789;
t2564 = -t3262 * (t2860 - t2920) + t3000 * t2771;
t3911 = t2460 - t2564;
t3539 = t3040 * t3008;
t2893 = t3047 * t3350 - t3539;
t2910 = t3180 * t3041;
t2713 = t2893 * t3045 + t2910 * t3039;
t3659 = qsD5 * t2713;
t3930 = t3039 * t3938 - t3045 * t3939 - t3659;
t2822 = t3047 * t3128 + t3321;
t2948 = qsD2 * t3312;
t3566 = t3035 * t3036;
t2901 = qsD1 * t3566 - t2948;
t2939 = qsD1 * t3030 + qsD3 * t3016;
t3762 = t2901 - t2939;
t3125 = t3762 * t3262;
t2587 = t3000 * t2822 - t3125;
t3508 = t3046 * t2822;
t2782 = t3040 * t3508;
t2604 = t3028 * t2901 + t3034 * t2939 + t2782;
t2900 = t3029 * t3036 * qsD1 + t2948;
t3336 = qsD4 * t3575;
t2823 = t3336 + t2900;
t3594 = t2923 * t3046;
t3091 = t3015 * t3352 + t3594;
t3138 = 0.2e1 * t2900 + 0.2e1 * t2939 + t3336;
t2902 = t3105 * qsD1;
t3198 = qsD4 * t3112 + 0.2e1 * t2902;
t3849 = t3041 * t3782;
t2622 = -t3047 * t3733 + t3849;
t3511 = t3046 * t2622;
t3543 = t3040 * t2822;
t3685 = qsD2 * t3016;
t3595 = t2923 * t3040;
t3735 = -a4 * (qsD2 * t3572 + qsD4 * t3574) + qsD4 * t3595 + t3782 * t3046;
t3929 = -t3091 * t3680 - (d5 * t3685 - t3735) * t3041 - (t2604 + t2823) * t3794 - d5 * t2587 - t3511 + t3198 * t3040 - (t3046 * t3138 + t3543) * a4;
t3433 = t2571 - t2556;
t2740 = -t2887 + t3598;
t3018 = t3035 * qsD2;
t2912 = t2946 + t3018;
t2880 = t2912 + t3671;
t3027 = t3039 ^ 2;
t3033 = t3045 ^ 2;
t2879 = -qsD1 * t3578 + t3259;
t3252 = t2879 + t3672;
t2928 = t3781 * t3047;
t3541 = t3040 * t2928;
t2687 = t3046 * t3252 - t3541;
t3549 = t3039 * t3045;
t3318 = t2687 * t3549;
t2501 = t2740 * t3033 + t2880 * t3027 + t3318;
t2739 = t2890 + t2887;
t2697 = qsD5 * t3538 + t2739;
t3928 = t2697 - t2501;
t3533 = t3041 * t3045;
t3824 = -t3045 * t3347 + t3271 * t3533 + (qsD4 * t3538 - t3047 * t3270 + t2867) * t3039;
t3927 = -t2740 + t2880;
t3926 = -qsD6 * t3538 + t3935;
t2792 = t3028 * t3781 + t2888;
t2624 = t2792 * t3033 - t2862 * t3549;
t2761 = t2791 + t3648;
t3925 = t2761 - t2624;
t3514 = t3045 * t3046;
t2931 = t3039 * t3047 + t3041 * t3514;
t3816 = qsD3 * t3534 + qsD4 * t3532;
t3924 = qsD6 * t2931 + t2866 + t3816;
t2725 = t3040 * t3509;
t3412 = t3028 * t3084 + t3034 * t3090;
t2565 = -t2725 + t3412;
t2710 = qsD4 * (qsD4 / 0.2e1 + t2925) + t2843;
t3515 = t3045 * t2710;
t3360 = 0.2e1 * t3515;
t2778 = t3046 * t2797;
t2814 = -t3540 - t3590;
t2523 = qsD4 * t2814 + t2778 - t3606;
t3622 = t2523 * t3039;
t3838 = t2565 * t3394 + (t3360 - t3622) * a5 + t3933;
t3923 = -t2927 * t3045 + t3552;
t3506 = t3046 * t2928;
t2686 = -t3040 * t3252 - t3506;
t3195 = -qsD5 * t2686 - t3911;
t3316 = t2913 * t3535;
t2709 = t2926 * t3000 - 0.2e1 * t3316;
t3610 = t2709 * t3039;
t3922 = (t3610 + t3935) * qsD5 + t3045 * t3195;
t3341 = qsD3 * t3571;
t3500 = t3053 * t3041;
t3123 = -qsD4 * t2879 - t3041 * t3052 + t3500 - (-t3341 - t3345) * qsD1;
t3199 = 0.4e1 * qsD3 * t3312;
t3349 = t3001 * t3002;
t3780 = 0.2e1 * t3001 * qsD3;
t2743 = qsD1 * t3199 + (-t3349 + t3780) * qsD2;
t3331 = qsD4 * t3503;
t3419 = qsD3 * t3331 + t3046 * t2743;
t2480 = -qsD4 * t3506 + t3040 * t3123 + t3419;
t2770 = t3041 * t3805 - t3230;
t3179 = t3041 * t2980;
t2833 = -qsD2 * t3349 + 0.2e1 * t3179;
t3507 = t3046 * t2833;
t2562 = qsD4 * t2867 - t3040 * t2770 + t3507;
t3920 = t2480 - t2562;
t3919 = t2522 - t2600;
t2753 = t2925 * t3514 + t2927 * t3039;
t3546 = t3039 * t3051;
t3917 = -qsD5 * t2753 + t2760 * t3651 + t3040 * t3546 + ((-qsD4 * t3046 + t2863) * qsD5 + t3433) * t3045;
t3038 = sin(qs6);
t3603 = t2814 * t3045;
t2675 = t3039 * t3940 + t3603;
t3660 = qsD5 * t2675;
t2365 = t3660 + t3811;
t2811 = t3045 * t2832;
t3555 = t3039 * t2600;
t2449 = t2811 - t3555 - t3660;
t3833 = t2365 + t2449;
t3916 = t3833 * t3038;
t3371 = a3 * t3687;
t3085 = -d3 * t3781 + t3371;
t3302 = -0.2e1 * a3 * t3631;
t2662 = -a4 * t2879 + t3047 * t3085 + t3302;
t3140 = -a5 * t2687 + d5 * t2686 + t2662;
t2799 = a3 * t3377 + t3041 * t3085;
t3701 = d3 * t3040;
t3064 = a4 * (t2912 * t3789 + t2926 * t3040) - 0.2e1 * qsD2 * t3701 + t3046 * t2799;
t2552 = t3099 + t3064;
t3279 = -d5 * t2709 - t2552;
t3823 = t2739 + t2880;
t3730 = t3794 * t3823 - t3279;
t3149 = t2893 * t3039 - t2910 * t3045;
t3854 = qsD5 * t3149;
t3875 = t3039 * t3939 + t3045 * t3938 + t3854;
t3914 = -t3140 * t3039 - t3045 * t3730 + t3854 + t3875;
t2617 = a4 * t3016 - a5 * t2896 + d5 * t3118 + t3593;
t2733 = t3091 * t3041;
t2513 = t2617 * t3045 - t2733 * t3039;
t3662 = qsD5 * t2513;
t3913 = -t3039 * t3931 + t3045 * t3929 - t3662;
t3706 = a5 * t2814;
t2625 = d5 * t3405 + t3706;
t3615 = t2663 * t3045;
t2496 = t2625 * t3039 - t3615;
t3853 = qsD5 + t3405;
t3130 = -d5 * t3853 - t3706;
t3284 = a5 * t3936 - t2663;
t3912 = t3039 * t3130 + t3045 * t3284 - t2496;
t2553 = -t3028 * t3356 + t3748;
t2580 = -t2754 * t3034 - t2724;
t3826 = t2553 - t2580;
t3044 = cos(qs6);
t3910 = -t3038 * t3924 + t3044 * t3926;
t3751 = t2842 * t3535 + t2926 * t3807 + t3316 * t3719;
t2471 = t3034 * t2720 - t3751;
t2736 = t2771 * t3535;
t2576 = t2860 * t3034 + t2920 * t3028 - t2736;
t3825 = -t2576 + t2471;
t3909 = d5 * t3936;
t3273 = -0.2e1 * t3009;
t3400 = t3041 * t3273 + t2966;
t2692 = t2937 + (-t3348 - t3672) * qsD3 + t3400;
t3215 = t3029 * t3309;
t2859 = t2937 - t3215;
t3335 = qsD4 * t3571;
t2788 = qsD1 * t3335 + t2859;
t3908 = t2692 - t2788;
t3268 = qsD4 * t3045 + qsD6;
t3632 = qsD6 * t3045;
t3269 = qsD4 + t3632;
t3550 = t3039 * t3044;
t3328 = qsD5 * t3550;
t3520 = t3044 * t3046;
t3907 = -t2753 * t3044 + t3038 * t3592 - t3268 * t3520 + (t3038 * t3269 + t3328) * t3040;
t3401 = a3 * t2969 + qsD3 * t3302;
t3403 = a3 * t2964 + d3 * t3231;
t3699 = d3 * t3047;
t2644 = (-t3053 - t3358) * t3699 + t3401 + t3403;
t3369 = qsD2 * t3700;
t3591 = t2926 * t3046;
t3098 = t3046 * t2644 - 0.2e1 * t2720 * t3707 + t2842 * t3708 + t2912 * t3301 + t3369 * t3720 + (qsD4 * t3539 + (-t3331 + t3340) * d3 + (-t3338 + t3591) * a4) * qsD4;
t3544 = t3040 * t2799;
t2378 = -qsD4 * t3544 + t3098;
t3239 = d3 * t3341;
t3288 = a3 * t3273 + d3 * t3500 + qsD1 * t3239;
t3402 = a3 * t3232 + d3 * t3230;
t2544 = -a3 * t2968 - a4 * t2743 + t3288 + t3402;
t2907 = qsD4 * t3541;
t3201 = -qsD3 * t3671 - t2743;
t2481 = t3040 * t3201 + t3046 * t3123 + t2907;
t3557 = t3039 * t2481;
t2470 = t3028 * t2720 + t3751;
t3827 = t2470 + t2692;
t3906 = d5 * t3557 + qsD5 * t3930 + t3045 * t2378 + t2460 * t3693 + t3039 * t2544 + t2662 * t3649 + t2686 * t3373 + t3300 * t3823 + t3394 * t3827;
t3209 = (a2 + 0.2e1 * t3709) * t3048;
t3070 = (d3 * t3398 + t3209) * t3055;
t3684 = qsD3 * t2915;
t3905 = t3070 - t3684;
t3021 = t3051 * t3045;
t3904 = t2760 * t3649 + t3040 * t3021 - t3433 * t3039 + (-t3552 + t3923) * qsD5;
t2864 = t3040 * t2898;
t3185 = a4 * t3599 + qsD4 * t2864 + t3040 * t2676;
t3601 = t2827 * t3046;
t2464 = -qsD4 * t3601 + t3185;
t3616 = t2663 * t3039;
t2495 = t2625 * t3045 + t3616;
t3359 = 0.2e1 * t2811;
t3817 = -t2601 * t3039 - t3405 * t3649;
t3903 = a5 * t3359 + d5 * t3817 - qsD5 * t2495 + t3045 * t2464 + t3300 * t3940;
t3155 = -t2686 * t3039 - t2709 * t3045;
t3902 = t3911 * t3039 + (-t3155 + t3824) * qsD5;
t3305 = t2523 * t3549;
t3411 = t3028 * t3090 + t3034 * t3084;
t3292 = t2725 + t3411;
t3434 = -t3027 * t2710 - t3033 * t3292;
t2380 = t3305 - t3434;
t2494 = qsD5 * (qsD5 / 0.2e1 + t3405) + t2565;
t3559 = t3038 * t3044;
t3364 = 0.2e1 * t3559;
t3365 = -0.2e1 * t3559;
t3026 = t3038 ^ 2;
t3032 = t3044 ^ 2;
t2998 = -t3032 + t3026;
t3852 = t2365 * t2998;
t3899 = -t2380 * t3365 - t2494 * t3364 - t3852;
t3351 = -a5 + t3701;
t3353 = -a5 - t3707;
t3597 = t2915 * t3040;
t3793 = 0.2e1 * d5;
t3898 = a5 * t2709 + t3544 + 0.2e1 * t3369 + (d3 * t3503 - t3539) * t3719 + (t2740 + t2880) * t3793 + (t2912 * t3891 - t3591) * a4 - (t3002 * t3353 - t3597) * t3041 + (-t3351 + t3707) * t3681;
t3310 = t3041 * t3530;
t3224 = qsD2 * t3310;
t3498 = t3054 * t3016;
t2648 = qsD2 * t3199 - t3001 * t3498 + (-t3036 * t3780 + 0.4e1 * t3047 * t3224) * qsD1;
t3222 = t3530 * t3680;
t3226 = 0.2e1 * t3398;
t3242 = t3015 * (t3053 - t3054);
t2703 = t3047 * t3242 + (t3226 * t3631 - 0.2e1 * t3222) * qsD1;
t2408 = t3046 * t2648 - t3040 * t2703 + (t2654 + t3151) * qsD4;
t2999 = t3033 - t3027;
t3388 = 0.2e1 * t3045;
t3263 = t3039 * t3388;
t2605 = t2901 * t3034 + t2939 * t3028 - t2782;
t3424 = t2605 - t2823;
t3820 = -t2999 * t2584 + t3424 * t3263;
t3897 = -qsD5 * t3820 + t2408 * t3549;
t3344 = qsD3 * t3577;
t3404 = -qsD2 * t3343 - t3016 * t3004;
t3114 = qsD2 * t3344 + t3404;
t3223 = qsD3 * t3311;
t2661 = (-t3018 * t3530 - t3223) * t3721 + t3114;
t2702 = t3041 * t3242 + (-qsD3 * t3310 - t3019 * t3398) * t3721;
t2914 = t3128 * qsD2;
t2385 = (-t2661 + t2914) * t3262 + t2782 * t3792 + (t3719 * t3762 + t2702) * t3000;
t2409 = -t3040 * t2648 - t3046 * t2703 + (t2655 + t3150) * qsD4;
t3107 = t3321 + t3342;
t3075 = qsD5 * t3118 + t3107;
t3197 = qsD5 * t3575 + t2654;
t2506 = t3039 * t3075 + t3045 * t3197;
t3159 = -t2583 * t3045 + t2587 * t3039;
t2279 = -t3045 * t2385 - t3039 * t2409 + (t2506 + t3159) * qsD5;
t2784 = t3039 * t3575 - t3045 * t3118;
t3158 = t2583 * t3039 + t2587 * t3045;
t2422 = qsD5 * t2784 - t3158;
t3390 = 0.2e1 * t3038;
t3264 = t3044 * t3390;
t3304 = t2584 * t3549;
t2428 = t2605 * t3033 + t2823 * t3027 + t3304;
t2558 = -qsD5 * t2896 + t2604;
t3443 = t2428 - t2558;
t3810 = -t2998 * t2422 + t3443 * t3264;
t3896 = -qsD6 * t3810 - t2279 * t3559;
t3895 = t3050 * t3038 - t3833 * t3044;
t3363 = -0.2e1 * t3549;
t3856 = t2792 * t3363;
t2616 = -t2862 * t2999 + t3856;
t3650 = qsD5 * t3040;
t3249 = t2760 + t3650;
t2602 = t3045 * t2863 + t3039 * t3249;
t3619 = t2602 * t3038;
t3327 = qsD5 * t3549;
t3258 = -0.4e1 * t3327;
t3652 = qsD5 * t3033;
t3653 = qsD5 * t3027;
t3813 = 0.2e1 * t3652 - 0.2e1 * t3653;
t3834 = t2553 * t3363 - t2792 * t3813 - t2862 * t3258 + t3263 * (t2580 - t2667) + t3918 * t2999;
t3537 = t3040 * t3044;
t3551 = t3039 * t3040;
t3870 = (-t2925 - t3269) * t3537 + (qsD5 * t3551 - t3046 * t3268 - t2753) * t3038;
t3614 = t2665 * t3045;
t3877 = -t2549 * t3045 + t3614 - t3904;
t3477 = t3038 * t3834 - t3044 * (-qsD6 * t2616 + t3877) - (t3619 - t3870) * qsD6;
t2484 = t2999 * t2687 + t3263 * t3927;
t2929 = -t3039 * t3532 + t3513;
t2508 = qsD5 * t2929 - t2686 * t3045 + t3610;
t3625 = t2508 * t3038;
t3362 = 0.2e1 * t3549;
t3836 = t2471 * t3363 + t2687 * t3258 + t2692 * t3362 + t3263 * (t2576 - t2788) + t3920 * t2999 + t3927 * t3813;
t3871 = t3038 * t3926 + t3044 * t3924;
t3677 = qsD4 * t2866;
t2561 = -t3046 * t2770 - t3040 * t2833 + t3677;
t3626 = t2481 * t3045;
t3882 = -t2561 * t3045 + t3626 - t3902;
t3487 = t3038 * t3836 - t3044 * (-qsD6 * t2484 + t3882) - (t3625 - t3871) * qsD6;
t2473 = t2619 * t3045 + t2623 * t3039;
t2477 = a5 * t2760 + t2792 * t3793 - t2804 + (0.2e1 * t3540 + t3590) * a4;
t2618 = t2927 * t3353 - t2804;
t3086 = qsD5 * t2973 + t2791 * t3794 - t3278;
t3277 = d5 * t2863 + t2827;
t3139 = a5 * t2862 - t3277;
t2392 = t3039 * t3139 + t3045 * t3086;
t3103 = t2959 * t3039 - t2973 * t3649 - t2392;
t3397 = 0.2e1 * t3708;
t3893 = a4 * qsD4 * t2911 + t2754 * t3397 + (t2577 - t2677) * t3040;
t3462 = (t2667 - t3826) * t3793 + t3433 * a5 + (-qsD4 * t3147 + t2812 + 0.2e1 * t2962 - t3510) * a4 + t3893;
t3894 = (-qsD6 * (-t2473 - t3103) + t3462) * t3038 + (-qsD6 * (t2477 - t2618) - t3932) * t3044;
t2593 = t3047 * t3905 + t3403;
t3286 = t3398 * a3;
t3393 = -0.2e1 * t3698;
t2851 = t3014 + (t3042 * t3393 + t3286) * t3055;
t3376 = a4 * t3002;
t3822 = t2859 + t2920;
t3892 = t3046 * t2851 + t3397 * t3822 + (t2593 - t2644) * t3040 + (-(-t3040 * t3376 + t3596) * t3041 + a4 * t3340 + qsD4 * t3505 + (qsD4 * t3534 + t3338) * d3 - t3064) * qsD4;
t2775 = (t3046 * t3376 + t3597) * t3041;
t3802 = -(t2771 * t3040 + t3789 * t3822) * a4 - t3046 * t2593 + t3040 * t2851;
t2404 = qsD4 * t2775 - t3802;
t2575 = t3028 * t2860 + t3034 * t2920 + t2736;
t3774 = (t2575 + t2788) * t3794;
t3121 = t2404 + t3774;
t2527 = -a4 * t2833 - t3041 * t3905 + t3402;
t3142 = -a5 * t2562 + d5 * t2561 + t2527;
t3696 = d5 * t2564;
t3704 = a5 * t3039;
t3888 = -(-t2687 * t3702 + t3039 * t3279) * qsD5 + t2480 * t3704 + t3142 * t3039 + (t3121 + t3696) * t3045 - t3906;
t3887 = -t3662 + t3913;
t2783 = t3015 * t3533 + t3039 * t3118;
t3307 = t2422 * t3559;
t3886 = qsD6 * t2783 - t3032 * t2428 - t2558 * t3026 + t2605 * t3027 + t2823 * t3033 - t3304 + t3307;
t3431 = -t3040 * t2578 - t3046 * t2876;
t3097 = a4 * t3509 - t3431 + (t2843 + t3090) * t3397;
t2664 = -t2864 + t3601;
t3678 = qsD4 * t2664;
t3885 = -t3097 - t3678 - (t2710 + t3292) * t3793 - t2464 + (-t2545 - t2832) * a5;
t3276 = (-0.2e1 * t3002 - qsD3) * qsD3;
t2373 = -t3678 + (-t3509 + (-0.2e1 * t2843 + t3276 - t3567) * t3040) * a4 + t3431;
t2478 = (t3568 - 0.2e1 * t2936 + (-t3030 + t3566) * t3055 + t3276) * t3535 + t3850;
t3285 = t2478 * t3794 + t2373;
t2467 = -0.2e1 * t2725 - t3411 + t3412;
t3715 = 0.2e1 * t2467;
t3145 = d5 * t3715 + t3285;
t3697 = d5 * t2523;
t3204 = -a5 * t2522 - t3697;
t3884 = -t3039 * t3204 - t3045 * t3145 - d5 * t3021 + qsD5 * t3616 + (-qsD5 * t3603 - t3555) * a5 + t3903;
t3883 = t2561 * t3039 - t3557 + t3922;
t3092 = t3015 * t3353 + t3595;
t3777 = t3198 * t3046;
t3779 = t3138 * t3040;
t3881 = a5 * t2587 + t3040 * t2622 + t3777 + (t2605 + t2823) * t3793 + (-t3508 + t3779) * a4 + t3092 * t3680 + (-a5 * t3685 + qsD4 * t3594 - t3782 * t3040 + (-qsD2 * t3504 + qsD4 * t3576) * a4) * t3041;
t2509 = qsD5 * t2931 + t3155;
t3880 = qsD6 * t2929 - t2501 * t3032 + t2509 * t3559 - t2697 * t3026 + t2740 * t3027 + t2880 * t3033 - t3318;
t3879 = -t2478 * t3362 + t2814 * t3258 - t2999 * t3919 + t3039 * t3359 + t3813 * t3940;
t3878 = t3039 * t2549 - t3554 + t3917;
t2603 = -t3045 * t3249 + t3552;
t3876 = t2603 * t3559 - t2624 * t3032 - t2761 * t3026 + t3027 * t2792 + (qsD6 * t3040 + t2862 * t3045) * t3039;
t2453 = qsD5 * t3816 + t2470;
t2520 = -qsD5 * t2866 + t2575;
t3767 = t2453 - t2520;
t3656 = qsD5 * t3405;
t3716 = -0.2e1 * t2467;
t3250 = t3716 - t3656;
t3874 = -t3045 * t3250 + t3021 - t3622 - t3817;
t2534 = -qsD4 * t3650 + t2554;
t2536 = qsD5 * t3592 - t3417;
t3873 = t2534 - t2536;
t2653 = t2814 * t3549 + t3027 * t3940;
t2750 = t3853 * t3039;
t3553 = t3039 * t2814;
t3872 = -t2653 * t3032 + t2750 * t3559 + t3033 * t3940 + (qsD6 - t3553) * t3045;
t3635 = qsD6 * t3032;
t3636 = qsD6 * t3026;
t3815 = 0.2e1 * t3635 - 0.2e1 * t3636;
t2595 = t3045 * t2600;
t3808 = t3652 - t3653;
t2908 = t3045 * t3940;
t3857 = t2908 * t3944;
t3749 = qsD5 * t3857 + t3039 * t2595 + t2814 * t3808;
t2423 = t3027 * t2832 + t3749;
t3655 = qsD5 * t2814;
t2442 = t2478 + t3655;
t2721 = t2750 * t3636;
t3238 = t2653 * t3365;
t3867 = qsD6 * t3238 + t3032 * t2423 - t3026 * t2442 - t3559 * t3874 + t2721;
t3738 = t2480 * t3549 + t2687 * t3808 + (-0.2e1 * t2740 + 0.2e1 * t2880) * t3327;
t2316 = t3033 * t2471 + t3027 * t2692 + t3738;
t2502 = t2509 * t3636;
t3323 = qsD6 * t3559;
t3256 = 0.2e1 * t3323;
t3257 = -0.2e1 * t3323;
t3866 = t3032 * t2316 + t2501 * t3257 + t2697 * t3256 + t3026 * t3767 - t3559 * t3883 + t2502;
t3750 = qsD5 * t3856 + t2666 * t3549 - t2862 * t3808;
t2383 = t3033 * t2553 + t3750;
t2589 = t2603 * t3636;
t3865 = t3032 * t2383 + t2624 * t3257 + t2761 * t3256 + t3026 * t3873 - t3559 * t3878 + t2589;
t3521 = t3044 * t3045;
t2613 = -t2814 * t3038 - t3405 * t3521;
t2639 = t2814 * t2999 + t3857;
t3517 = t3045 * t2601;
t3100 = -qsD6 * t2639 + t2523 * t3045 - t3517 - t3547 + (-t3250 + t3051 + t3656) * t3039;
t3322 = qsD6 * t3521;
t2751 = t3853 * t3045;
t3522 = t3044 * t2751;
t3469 = qsD5 * t3322 + t3879 * t3044 + (-t2613 - t3522) * qsD6 + t3100 * t3038;
t2892 = t3047 * t3351 + t3505;
t2611 = t2713 * t3044 - t2892 * t3038;
t3608 = t2720 * t3040;
t3468 = -(-t2842 * t3046 - 0.2e1 * t3608) * a4 - t2771 * t3707 + (-t3908 - t3825) * t3793 - t3911 * a5 + t3892;
t3497 = -t3888 * t3044 + (-qsD6 * t2611 + t3038 * t3914 - t3044 * t3898) * qsD6 + t3468 * t3038;
t3714 = -0.2e1 * t2478;
t3466 = a5 * t3715 + d5 * t3714 + t2372 - t3077 - 0.2e1 * t3690;
t3560 = t3038 * t3039;
t3634 = qsD6 * t3038;
t3494 = -t3466 * t3038 - t3884 * t3044 + (t3912 * t3038 + t3909 * t3044 + a5 * t3634 - (qsD5 * t3560 - t3322) * d5) * qsD6;
t3558 = t3038 * t3045;
t2612 = t2814 * t3044 - t3405 * t3558;
t3562 = t3038 * t2751;
t3860 = t3038 * (-qsD5 * t3632 - t3879) + (t2612 + t3562) * qsD6 + t3100 * t3044;
t3859 = t3038 * t3838 - t3044 * t3885;
t3229 = 0.2e1 * t2565 + 0.2e1 * t2710;
t3851 = t2523 * t2999;
t3063 = -t3039 * t3069 + t3045 * t3056;
t3486 = (-a5 * t2523 + d5 * t2522 + t2510) * t3045 + (-a5 * t3229 - d5 * t2545 - t2372) * t3039 - t3063;
t3839 = t3486 * t3044;
t2674 = t2908 - t3553;
t3519 = t3045 * t2522;
t3160 = -t3039 * t2545 + t3519;
t2363 = qsD5 * t2674 - t3160;
t3295 = qsD5 * t2908 + t3039 * t2832 + t2595;
t3329 = qsD5 * t3553;
t2448 = t3295 - t3329;
t3456 = t2363 - t2448;
t3049 = qsD7 ^ 2;
t3237 = t3853 * t3364;
t3087 = t3033 * t2710 + t3027 * t3292;
t2341 = t3087 - 0.2e1 * t3305 + t3434;
t3638 = qsD6 * t2674;
t3247 = 0.2e1 * t2341 + t3638;
t3819 = -t2674 * t3634 + (t3049 - t3247) * t3038 + qsD7 * (t2675 * t2998 + t2675 + t3237) - t3895;
t3804 = t3776 + 0.2e1 * t3358;
t3803 = qsD5 * t3536 + t3923;
t3801 = qsD4 * (t3789 * (t2900 + t2939) + t3543) - t2702 * t3046;
t3800 = -qsD5 * t2662 - t2378;
t3267 = qsD7 * t3044 + qsD5;
t3588 = t2973 * t3039;
t3798 = qsD7 * (t3039 * t3086 - t3045 * t3139 + t3267 * t3588 - t3942) - t3894;
t3495 = t3038 * t3885 + t3044 * t3838;
t3162 = -t3038 * t2484 - t3044 * t2508;
t3488 = t3882 * t3038 + t3836 * t3044 + (t3162 + t3910) * qsD6;
t3156 = -t3044 * t2602 - t3038 * t2616;
t3478 = t3877 * t3038 + t3834 * t3044 + (t3156 + t3907) * qsD6;
t3391 = 0.2e1 * qsD6;
t3791 = 0.2e1 * qsD7;
t3037 = sin(qs7);
t3025 = t3037 ^ 2;
t3043 = cos(qs7);
t3031 = t3043 ^ 2;
t2997 = t3031 - t3025;
t3790 = 0.2e1 * t2997;
t3713 = -0.2e1 * t3040;
t3564 = t3037 * t3043;
t3788 = 0.2e1 * t3564;
t3786 = qsD6 * (t2713 * t3038 + t2892 * t3044);
t2514 = t2617 * t3039 + t2733 * t3045;
t2732 = t3092 * t3041;
t3785 = qsD6 * (t2514 * t3038 + t2732 * t3044);
t3772 = t3038 * t3881 + t3044 * t3887 + t3785;
t3319 = t2365 * t3559;
t3453 = t3032 * t2380 + t3026 * t2494;
t3771 = -t3319 + t3453 + t3305 - qsD6 * (qsD6 / 0.2e1 + t2674) - t3087;
t3661 = qsD5 * t2514;
t3769 = t3039 * t3929 + t3045 * t3931 - t3661;
t3688 = qsD1 * qsD2;
t3275 = -0.2e1 * t3042 * t3688;
t3207 = t3048 * t3275;
t3761 = t3029 * t3207 + t3223 * t3721;
t3299 = -0.2e1 * t3374;
t3396 = -0.2e1 * t3704;
t3760 = d5 * t3626 + qsD5 * t3875 + t3045 * t2544 + t2687 * t3375 + t3823 * t3299 + t3827 * t3396;
t3703 = a5 * t3044;
t3758 = -qsD6 * t3703 + (qsD6 * t3558 + t3328) * d5 - t3912 * t3044 + t3909 * t3038;
t3757 = t3038 * t3898 + t3044 * t3914 + t3786;
t2515 = t3039 * t3519;
t3756 = t3027 * t2478 + t3033 * t2832 + t2515 - t3749;
t3755 = a5 * t3329 + t2832 * t3396 + t3940 * t3299 + (-t3517 + t3546) * d5 + qsD5 * t2496;
t3754 = d5 * t3614 + qsD5 * t2473 + t2554 * t3396 + t3045 * t2676 + t2791 * t3299 - t2862 * t3375;
t3079 = -t3045 * (qsD5 * t3044 + qsD7) + qsD6 * t3560;
t3633 = qsD6 * t3039;
t3243 = t2639 + t3633;
t3739 = -t3038 * t3243 + t2613 + t3079 - t3522;
t2456 = (-t2923 * t3053 + t3054 * t3206) * t3041 + (t3080 * t3681 + ((0.2e1 * a2 + 0.4e1 * t3709) * t3048 + d3 * t3226) * t3019) * qsD1;
t2820 = ((a2 + t3393) * t3042 + t3286) * t3688;
t3732 = -(t2902 * t3713 - (-a4 * t3576 - t3594) * t3680 - t3735 * t3041 + t3511) * qsD4 - t2456 * t3040 - 0.2e1 * t2820 * t3046;
t3422 = -t3114 + t2914 + t3761;
t3228 = 0.2e1 * t3422;
t2301 = t2820 * t3713 + t3046 * t2456 + (-t3777 + (-qsD3 * t3593 - t2622 + t3849) * t3040) * qsD4 + (t3040 * t2702 + t3046 * t3228 + ((t2822 + t3107) * t3046 - t3779) * qsD4) * a4;
t3421 = -t2702 * t3535 - t2822 * t3673;
t3602 = t2822 * t3028;
t2397 = t3028 * t2661 + t3034 * t2914 - t3421 + (0.2e1 * t3535 * t3762 - t3602) * qsD4;
t2597 = qsD4 * t3342 + (t3335 - t3344) * qsD2 - t3404 + t3761;
t3728 = d5 * t2385 + (t2397 + t2597) * t3794 + t2301;
t2547 = t2562 * t3549;
t2410 = t2576 * t3033 + t2788 * t3027 + t2547;
t3255 = 0.4e1 * t3323;
t3492 = t3264 * (t2410 - t2520) + t2316 * t3365 + t2453 * t3364 + t2509 * t3255 + t3883 * t2998 + t3928 * t3815;
t2530 = t2550 * t3549;
t2386 = t2580 * t3033 + t2667 * t3027 + t2530;
t3484 = t3264 * (t2386 - t2536) + t2383 * t3365 + t2534 * t3364 + t2603 * t3255 + t3878 * t2998 + t3925 * t3815;
t2384 = -t2478 * t3033 + t2515;
t3725 = t3264 * (t2384 - t2442) + t2423 * t3365 + t2750 * t3255 - t3815 * t2653 + t3874 * t2998;
t3718 = -0.2e1 * t2380 * t3026 - 0.2e1 * t2494 * t3032 - 0.4e1 * t3319 + 0.2e1 * t3453;
t3717 = -0.2e1 * t2341;
t3654 = qsD5 * t2862;
t3645 = qsD6 * t2509;
t2568 = -t2675 * t3038 - t3044 * t3853;
t3644 = qsD6 * t2568;
t3643 = qsD6 * t2603;
t2634 = t2784 * t3044 + t2896 * t3038;
t3639 = qsD6 * t2634;
t3637 = qsD6 * t2675;
t2668 = qsD6 + t2674;
t3613 = t2675 * t3044;
t3607 = t2750 * t3032;
t3604 = t3405 * t3039;
t3561 = t3038 * t3853;
t3526 = t3044 * t2363;
t2443 = t3044 * t2448;
t3499 = t3054 * t3015;
t3491 = -t2410 * t3032 - t2509 * t3635 + t3866;
t3282 = -t2404 - t3696;
t3489 = -t2480 * t3702 + (d5 * t3155 - t3045 * t2552) * qsD5 - t3142 * t3045 + t3760 + (-d5 * t2460 - t3282 + t3774 + t3800) * t3039;
t3485 = -(-t3045 * t3229 + t3622) * a5 + t3933;
t3483 = -t3045 * t3204 - a5 * t2595 + (d5 * t3604 + t3615) * qsD5 + t3755 + (t3145 - t2464) * t3039;
t3482 = -t2386 * t3032 - t2603 * t3635 + t3865;
t3481 = (-t3247 - t3050 - t3638) * t3044 - t3916;
t3479 = -qsD6 * t3607 - t2384 * t3032 + t3867;
t3476 = t2449 + t3899;
t3189 = t3045 * t3292;
t2345 = (t3189 - t3515) * t3944 - t3851;
t3475 = -t2675 * t3255 + (t2345 - t2601) * t3364 + t3456 * t2998 - t3815 * t3853;
t2646 = t2675 * t3636;
t3296 = qsD6 * t3237 + t3026 * t2601 + t2646;
t3474 = t2345 * t3032 - t2675 * t3635 + t3296 + (-t2443 + t3526) * t3038;
t2369 = t3851 + (-0.2e1 * t3189 + t3360) * t3039;
t2293 = -t2369 * t3038 - t3526 + t3644;
t2347 = -t3038 * t2601 + t2443 + t3644;
t3473 = -t2293 + t2347;
t3472 = t2293 + t2347;
t2366 = t3044 * t2369;
t2569 = -t3561 + t3613;
t2294 = qsD6 * t2569 - t2363 * t3038 + t2366;
t2769 = qsD6 * t3561;
t3244 = t2601 + t3637;
t2348 = t3038 * t2448 + t3044 * t3244 - t2769;
t3471 = -t2294 + t2348;
t3467 = t3824 * qsD6 + t3825 * t3027 + t3033 * t3908 + t2547 - t3738;
t3464 = t2316 - t2410;
t3459 = qsD6 * t3803 - t2667 * t3033 + t3027 * t3826 + t2530 - t3750;
t3458 = -qsD5 * t3633 - qsD6 * t3604 + t3756;
t3452 = t2383 - t2386;
t3451 = -t2384 + t2423;
t3441 = t3716 - t3051;
t3440 = -t2481 + t2561;
t3437 = -t2523 + t2601;
t3436 = t2549 - t2665;
t3415 = t2764 - t2832;
t3367 = -0.4e1 * t3564;
t3281 = -t2411 - t3695;
t3261 = a2 * t3048 * t3688;
t3253 = t2768 + 0.2e1 * t3676;
t2336 = t2345 - t3637;
t3194 = -qsD7 * t2513 + t3772 + t3785;
t3193 = t2568 * t3791 - t3049 + t3718;
t3192 = qsD7 * (t2514 * t3044 - t2732 * t3038) + t3661 - t3769;
t2507 = -t3039 * t3197 + t3045 * t3075;
t3191 = -qsD7 * t2634 + t2507 - t3810;
t3113 = qsD6 * (-t2784 * t3038 + t2896 * t3044);
t2393 = t3044 * t2506 + t3038 * t2655 + t3113;
t2421 = qsD5 * t2783 + t3159;
t3167 = -t3044 * t2421 + t3038 * t3820;
t3190 = qsD7 * t2783 + t2393 - t3113 - t3167;
t3166 = t2421 * t3038 + t3044 * t3820;
t3057 = -t2923 * t3023 + d3 * t3222 * t3721 + qsD2 * t3239 + t3499 * t3699 + t3016 * t3013 - 0.2e1 * t3041 * t3261 + (-a3 * t3686 + t3782) * t3681 + (t3711 + t3710) * t3680 * t3722 + (-0.4e1 * a3 * t3224 - 0.2e1 * t3370 * t3398) * qsD1;
t3144 = -a4 * t2648 - a5 * t2408 + d5 * t2409 + t3057;
t3137 = qsD7 * t3149 + t3757 + t3786;
t3136 = qsD7 * t2611 + t3039 * t3730 - t3140 * t3045 + t3659 - t3930;
t2846 = t2931 * t3044 - t3038 * t3538;
t3135 = -qsD7 * t2846 + t2998 * t2509 + t3264 * t3928 + t3824;
t3134 = qsD7 * t2929 - qsD6 * (-t2931 * t3038 - t3041 * t3537) - t3162 + t3910;
t3116 = d5 * qsD7 * t3039 - qsD6 * (-d5 * t3558 + t3703) + t3758;
t3111 = qsD7 * t3551 - qsD6 * (t3038 * t3536 - t3520) - t3156 + t3907;
t3101 = t2770 + t3123;
t3093 = t2750 * t2998 + t3238 + (-t3405 - t3267) * t3039;
t3088 = qsD7 * (a5 * t3038 + d5 * t3521) + t3039 * t3284 - t3045 * t3130 + t2495 + t3373;
t3082 = a5 * t3919 + qsD5 * t2663 + t3697;
t2930 = -t3038 * t3046 - t3040 * t3521;
t3067 = -qsD7 * t2930 + t2998 * t2603 + t3264 * t3925 + t3803;
t3065 = -qsD5 * t2552 - t2527 + (-qsD5 * t2709 - t2561) * d5 - t3920 * a5;
t3062 = -qsD5 * t2626 + (-qsD5 * t2760 - t2549) * d5 + t3945;
t2415 = t2473 * t3044 - t2618 * t3038;
t3058 = (t2959 * t3550 + t2973 * t3079 - t3044 * t2392 - (-qsD6 * t3588 - t2477) * t3038 + t2415) * qsD7 + t3754 - t3937 * t3045 + (-d5 * t2556 - t2446 + (t2959 + t3277) * qsD5 - t3281 + t3775) * t3039;
t2632 = t2668 * t3038;
t2563 = -t2675 * t3559 + t3026 * t3853;
t2517 = t3044 * t3243 - t3562;
t2445 = qsD6 * t2930 + t2616 * t3044 - t3619;
t2398 = t3034 * t2661 + t3028 * t2914 + (-t3125 + t3602) * qsD4 + t3421;
t2394 = t3038 * t2506 - t3044 * t2655 + t3639;
t2358 = qsD6 * t2846 + t2484 * t3044 - t3625;
t2352 = -qsD5 * t2655 + t2397;
t2326 = -t3166 + t3639;
t2280 = t3039 * t2385 - t3045 * t2409 + (t2507 + t3158) * qsD5;
t2273 = t3033 * t2398 + t3027 * t2597 + t3897;
t2272 = (-t2398 + t2597) * t3263 - 0.4e1 * t3304 * qsD5 + (-0.2e1 * qsD5 * t3424 + t2408) * t2999;
t2262 = (t2380 - t2494) * t3264 - t3852;
t2261 = qsD6 * t2507 + t3027 * t2398 + t3033 * t2597 - t3897;
t2253 = a5 * t2385 + (t2398 + t2597) * t3793 + (t3040 * t3228 + t3801) * a4 - t3732;
t2237 = -t3038 * t2272 - t3044 * t2280 + (-t2394 + t3166) * qsD6;
t2236 = t3044 * t2272 - t3038 * t2280 + (t2393 + t3167) * qsD6;
t2235 = t3032 * t2273 + t3026 * t2352 + t3896;
t2234 = (-t2273 + t2352) * t3264 + 0.4e1 * t3307 * qsD6 + (t3391 * t3443 + t2279) * t2998;
t2233 = qsD5 * t3913 - t3728 * t3039 + t3144 * t3045;
t2232 = qsD5 * t3769 + t3144 * t3039 + t3045 * t3728;
t2230 = t3044 * t2232 - t3038 * t2253 + ((-qsD6 * t2514 - t3881) * t3044 + (qsD6 * t2732 + t3887) * t3038) * qsD6;
tauc_regressor = [0 0 0 t3207 t3688 * t3226 -t3498 t3499 0 0.2e1 * t3261 a2 * t3275 t2661 t2648 t2702 t2703 t2914 t2456 t3057 t2398 t2385 t2408 t2409 t2597 t2301 (t3422 * t3713 - t3801) * a4 + t3732 t2273 t2272 t2279 t2280 t2352 t2232 t2233 t2235 t2234 t2236 t2237 t2261 t2230 qsD6 * t3772 - t3038 * t2232 - t3044 * t2253 t2236 * t3564 + t3031 * t2235 + t3025 * t2261 + (t2997 * t2326 + t3788 * t3886) * qsD7 t2997 * t2236 + (-t2235 + t2261) * t3788 + (t2326 * t3367 + t3790 * t3886) * qsD7 -t3043 * t2234 - t3037 * t2237 + (t3037 * t3191 + t3043 * t3190) * qsD7 t3037 * t2234 - t3043 * t2237 + (-t3037 * t3190 + t3043 * t3191) * qsD7 qsD7 * t2394 + t3026 * t2273 + t3032 * t2352 - t3896 t3043 * t2230 + t3037 * t2233 + (t3037 * t3194 - t3043 * t3192) * qsD7 -t3037 * t2230 + t3043 * t2233 + (t3037 * t3192 + t3043 * t3194) * qsD7; 0 0 0 t3309 -t3776 0 0 0 -a2 * t3501 t3014 t3071 + t3214 -0.2e1 * t3179 + 0.2e1 * (qsD2 * t3001 + 0.2e1 * t2946) * qsD3 t3047 * t3804 + t3023 (-t3053 - t3804) * t3041 -t2920 (t3684 - t3055 * t3209 + (-t3053 - t3805) * d3) * t3047 + t3401 ((-t2915 - t3371) * qsD3 + t3070) * t3041 + t3288 t3825 t3911 -t3507 + (-t2867 - t3506) * qsD4 + t3101 * t3040 + t3419 -t3677 + t2907 + (t2833 + t3201) * t3040 + t3101 * t3046 t3215 - qsD3 * t3672 + (-t3335 - t3344) * qsD1 + t3400 (-t2775 - t3544) * qsD4 + t3098 + t3802 (0.2e1 * t3608 + (-t2771 + t2842) * t3046) * a4 + t3892 t3464 t3836 t3039 * t3440 + t3922 t3045 * t3440 + t3902 t3767 t3065 * t3039 + ((-qsD5 * t2687 - 0.2e1 * t2575 - 0.2e1 * t2788) * a5 + t3282) * t3045 + t3906 t3065 * t3045 + (d5 * t3195 + t3121 + t3800) * t3039 + t3760 (-t2410 - t3645) * t3032 + t3866 t3492 t3488 -t3487 t3467 t3497 t3757 * qsD6 + t3038 * t3888 + t3468 * t3044 t3488 * t3564 + t3491 * t3031 + t3467 * t3025 + (t2997 * t2358 + t3788 * t3880) * qsD7 t3488 * t2997 + (t3467 - t3491) * t3788 + (t2358 * t3367 + t3790 * t3880) * qsD7 -t3492 * t3043 + t3487 * t3037 + (t3037 * t3135 + t3043 * t3134) * qsD7 t3487 * t3043 + t3492 * t3037 + (-t3037 * t3134 + t3043 * t3135) * qsD7 -t2502 + t3464 * t3026 + t3871 * qsD7 + (t3645 + t3767) * t3032 + (-t3391 * t3928 + t3883) * t3559 t3497 * t3043 + t3489 * t3037 + (t3037 * t3137 - t3043 * t3136) * qsD7 t3489 * t3043 - t3497 * t3037 + (t3037 * t3136 + t3043 * t3137) * qsD7; 0 0 0 0 0 0 0 0 0 0 t2754 -t2768 -t3104 - 0.2e1 * t3232 + t3399 0.2e1 * t2964 + t2969 + t2980 + (-t2927 - t3631) * qsD3 -t3356 (d3 * t3320 - t3096) * qsD1 + t3181 + t3797 (-t2980 + (qsD3 - t3002) * t3631) * d3 - t3110 + t3410 t3826 -t3433 t3415 * t3040 + (-t3052 - t3253) * t3046 t3040 * t3253 + t3046 * t3415 + t3022 -t2667 (-t2684 + t2804) * qsD4 + t3173 + t3734 ((0.2e1 * t3356 + t3675) * t3040 + (-t2762 + t2831 + t3386) * t3046) * a4 + t3893 t3452 t3834 t3436 * t3039 + t3917 t3045 * t3436 + t3904 t2554 + t3417 - t3654 ((0.2e1 * t3417 - 0.2e1 * t2667 + t3654) * a5 + t3281) * t3045 + t3062 * t3039 + t3934 t3062 * t3045 + (-t2446 + (t2827 + t2959) * qsD5 + (qsD5 * t2863 + t3433) * d5 + t3120) * t3039 + t3754 (-t2386 - t3643) * t3032 + t3865 t3484 t3478 -t3477 t3459 t3894 t3462 * t3044 + t3932 * t3038 + (t2477 * t3038 + t3044 * t3103 + t2415) * qsD6 t3478 * t3564 + t3482 * t3031 + t3459 * t3025 + (t2997 * t2445 + t3788 * t3876) * qsD7 t3478 * t2997 + (t3459 - t3482) * t3788 + (t2445 * t3367 + t3790 * t3876) * qsD7 -t3484 * t3043 + t3477 * t3037 + (t3037 * t3067 + t3043 * t3111) * qsD7 t3477 * t3043 + t3484 * t3037 + (-t3037 * t3111 + t3043 * t3067) * qsD7 -t2589 + t3452 * t3026 + t3870 * qsD7 + (t3643 + t3873) * t3032 + (-t3391 * t3925 + t3878) * t3559 t3058 * t3037 - t3043 * t3798 t3037 * t3798 + t3058 * t3043; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 t2478 t3716 t3152 + t3413 t2778 + (-t2762 - t2831) * t3040 + (t2814 + t3590) * qsD4 + t3406 t2832 (t2664 - t3601) * qsD4 + t3097 + t3185 t3108 - t3414 t3451 t3879 t3021 + (t2467 + t3656) * t3388 + t3437 * t3039 t3437 * t3045 + (t3441 - 0.2e1 * t3656) * t3039 -t2442 t3082 * t3039 + (-t2373 + t3441 * d5 + (t3714 - t3655) * a5) * t3045 + t3903 t3082 * t3045 + (-d5 * t3250 - t2464 + t3285) * t3039 + t3755 (-qsD6 * t2750 - t2384) * t3032 + t3867 t3725 t3469 t3860 -t3633 * t3853 + t3756 -t3494 t3758 * qsD6 - t3038 * t3884 + t3466 * t3044 t3469 * t3564 + t3479 * t3031 + t3458 * t3025 + (t2997 * t2517 + t3788 * t3872) * qsD7 t3469 * t2997 + (t3458 - t3479) * t3788 + (t2517 * t3367 + t3790 * t3872) * qsD7 -t3725 * t3043 - t3860 * t3037 + (t3093 * t3037 - t3043 * t3739) * qsD7 -t3860 * t3043 + t3725 * t3037 + (t3037 * t3739 + t3093 * t3043) * qsD7 -qsD7 * t2612 - t2442 * t3032 - t2721 + t3451 * t3026 + (qsD7 * t3550 + t3607) * qsD6 + (qsD7 * t3649 + (t2653 * t3391 + t3874) * t3044) * t3038 -t3494 * t3043 + t3483 * t3037 + (t3037 * t3116 - t3043 * t3088) * qsD7 t3483 * t3043 + t3494 * t3037 + (t3037 * t3088 + t3043 * t3116) * qsD7; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 t2345 t3717 (-t2674 - t3553) * qsD5 + t3160 + t3295 -t3518 + t2811 + (-t2522 - t2600) * t3039 t2601 -d5 * t3160 + t3039 * t2372 - t3045 * t2510 + t2523 * t3702 + t3229 * t3704 + t3063 t3838 t2336 * t3032 + t3456 * t3559 + t3296 -t3475 -t3916 + (t3717 - t3050 - 0.2e1 * t3638) * t3044 (t2341 + t3638) * t3390 + t3895 -t2336 -t3839 t3486 * t3038 -t3025 * t2336 + t3481 * t3564 + t3474 * t3031 + (-0.2e1 * t2563 * t3564 - t2632 * t2997) * qsD7 t3481 * t2997 - t2563 * qsD7 * t3790 + (t2632 * t3791 - t2336 - t3474) * t3788 t3037 * t3819 + t3475 * t3043 -t3475 * t3037 + t3043 * t3819 t3026 * t2345 - t2646 + t3244 * t3032 + (-t2668 * qsD7 + (-0.2e1 * qsD6 * t3853 - t3456) * t3044) * t3038 t3037 * t3485 - t3043 * t3839 t3037 * t3839 + t3043 * t3485; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 t2262 t3718 t3526 + t2443 + (t2369 - t2601) * t3038 -t3044 * t2601 + t2366 + t2769 + (-t2363 - t2448) * t3038 + (t2569 - t3613) * qsD6 t2449 t3859 t3495 t3031 * t2262 + t3025 * t2449 + t3473 * t3564 + (t2569 * t2997 + t2668 * t3788) * qsD7 (-t2262 + t2449) * t3788 + t3473 * t2997 + (t2569 * t3367 + t2668 * t3790) * qsD7 t3037 * t3471 - t3043 * t3193 t3037 * t3193 + t3043 * t3471 -qsD7 * t2569 - t3899 t3859 * t3043 -t3859 * t3037; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 -t2997 * t2294 + t3771 * t3788 0.2e1 * t2294 * t3788 + 0.2e1 * t2997 * t3771 t3037 * t3476 + t3043 * t3472 -t3037 * t3472 + t3043 * t3476 t2348 t3037 * t3495 - t3043 * t3486 t3037 * t3486 + t3043 * t3495;];